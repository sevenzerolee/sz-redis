<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd "
	default-lazy-init="true">
	
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>
	
    <!-- redis config start -->
    <!-- redis pool config -->
    <!-- 
    <bean id="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="maxTotal"  value="${redis.maxActive}" />
        <property name="maxIdle"   value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
     -->
    <!-- jedisCluster config -->
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        
        <constructor-arg index="0">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host1}"/>
                    <constructor-arg type="int" value="${redis.port1}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host2}"/>
                    <constructor-arg type="int" value="${redis.port2}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host3}"/>
                    <constructor-arg type="int" value="${redis.port3}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host4}"/>
                    <constructor-arg type="int" value="${redis.port4}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host5}"/>
                    <constructor-arg type="int" value="${redis.port5}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host6}"/>
                    <constructor-arg type="int" value="${redis.port6}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host7}"/>
                    <constructor-arg type="int" value="${redis.port7}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg type="String" value="${redis.host8}"/>
                    <constructor-arg type="int" value="${redis.port8}"/>
                </bean>
            </set>
        </constructor-arg>
        
        
        <constructor-arg index="1" type="int" value="${redis.connectionTimeout}" />
        
        <constructor-arg index="2" type="int" value="${redis.maxRedirections}" />
        
        <constructor-arg index="3" ref="jedisPoolConfig" />
    </bean>
    <!-- redis config end -->
    
    
    
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" /> 
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
    </bean>

    <!-- 
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis1.host}" />
                    <constructor-arg index="1" type="int" value="${redis1.port}" />
					<constructor-arg index="2" value="${redis1.instance}"/>
                </bean>
                
				<bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis2.host}" />
                    <constructor-arg index="1" type="int" value="${redis2.port}" />
					<constructor-arg index="2" value="${redis2.instance}"/>
                </bean>
                
            </list>
        </constructor-arg>
    </bean>
     -->
	
</beans>